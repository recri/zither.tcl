#!/usr/bin/wish

#
# long complicated test to see if the zither control interface can be used with touch
#
# answer is there appears to be a bug with multiple option menus, the entry select
# works with the first option menu, as you slide along the first menu, the entries
# highlight as you pass over them, and releasing selects the highlignted entry.
# on subsequent menues there is no highlight and nothing is ever selected.
#

namespace eval ::window {
    array set data {}
}

proc get-instruments {} { list banjo guitar bass violin zither }
proc get-tunings {} { list standard open-C open-G open-D }
proc get-keys {} { list Gb Db Ab Eb Bb F C G D A E B F# C# }
proc get-modes {} { list Ionian	Dorian Phrygian Lydian Mixolydian Aeolian Locrian }
proc get-sounds {} { list banjo guitar bass violin zither }

proc max-width {list} {
    tcl::mathfunc::max {*}[lmap i $list {string length $i}]
}

proc ::window::adjust {w which {value {}} {redraw 1}} {
   puts -nonewline "{adjust $w $which {$value} $redraw} with data($which) "
    if {[info exists ::window::data($which)]} {
	puts " == $::window::data($which)"
    } else {
	puts " not set"
    }
}

proc myscale {w name from to} {
    labelframe $w.$name -text [string totitle $name]
    scale $w.$name.scale -orient horizontal -showvalue true \
	-variable ::window::data($name) -from $from -to $to \
	-command [list ::window::adjust $w $name [list set ::window::data($name)]]
    pack $w.$name.scale -fill x -expand true
    return $w.$name
}
    
proc myoptionmenuselect {w name {value {}}} {
    $w.$name.options selection clear
    if {$value eq {}} { set value $::window::data($name) }
    ::window::adjust $w $name $value
}

proc myoptionmenu {w name values} {
    labelframe $w.$name -text [string totitle $name]
    pack [ttk::combobox $w.$name.options -textvariable ::window::data($name) -values $values -state readonly -width [max-width $values]] -fill x -expand true
    bind $w.$name.options <<ComboboxSelected>> [list myoptionmenuselect $w $name]
    myoptionmenuselect $w $name [lindex $values 0]
    $w.$name.options set [lindex $values 0]
    return $w.$name
}
    
proc controls {w} {

    # puts "::window::data [array get ::window::data]"
    if {[winfo exists $w]} { destroy $w }
    
    # controls
    toplevel $w
    
    # choices
    pack [myoptionmenu $w instrument [get-instruments]] -side top -expand true -fill x
    pack [myoptionmenu $w tuning [get-tunings]] -side top -expand true -fill x
    pack [myoptionmenu $w tonic [get-keys]] -side top -expand true -fill x
    pack [myoptionmenu $w mode [get-modes]] -side top -expand true -fill x
    pack [myoptionmenu $w sound [get-sounds]] -side top -expand true -fill x
    pack [myscale $w nut -24 24] -side top -fill x -expand true
    pack [myscale $w frets 1 36] -side top -fill x -expand true
    
    # control buttons
    pack [button $w.done -text Dismiss -command [list destroy $w]] -side top -fill x -expand true
    pack [button $w.quit -text Quit -command {destroy .}] -side top -fill x -expand true
    pack [button $w.panic -text Panic -foreground red -command {sound::stop}] -side top -fill x -expand true

    # hacks
#    $w configure -width 380 -height 800 -bd 0 -highlightthickness 0
#    after 1 [list wm attributes $w -fullscreen 1]

}

pack [canvas .fretboard] -expand true -fill both
wm withdraw .
controls .zither
